// Code generated by protoc-gen-go. DO NOT EDIT.
// source: devices.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Device struct {
	DvID        string           `protobuf:"bytes,1,opt,name=DvID,json=dvID,proto3" json:"DvID,omitempty"`
	Label       string           `protobuf:"bytes,2,opt,name=Label,json=label,proto3" json:"Label,omitempty"`
	Type        int32            `protobuf:"varint,3,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	Icon        string           `protobuf:"bytes,4,opt,name=Icon,json=icon,proto3" json:"Icon,omitempty"`
	Description string           `protobuf:"bytes,5,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	IsTwoWay    bool             `protobuf:"varint,6,opt,name=IsTwoWay,json=isTwoWay,proto3" json:"IsTwoWay,omitempty"`
	Category    string           `protobuf:"bytes,7,opt,name=Category,json=category,proto3" json:"Category,omitempty"`
	Destination string           `protobuf:"bytes,8,opt,name=Destination,json=destination,proto3" json:"Destination,omitempty"`
	Priority    int32            `protobuf:"varint,9,opt,name=Priority,json=priority,proto3" json:"Priority,omitempty"`
	Settings    []*CommonSetting `protobuf:"bytes,10,rep,name=Settings,json=settings,proto3" json:"Settings,omitempty"`
	// Datastore Key
	KeyID                int64    `protobuf:"zigzag64,100,opt,name=KeyID,json=keyID,proto3" json:"KeyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d27ec3f2c0e2043, []int{0}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetDvID() string {
	if m != nil {
		return m.DvID
	}
	return ""
}

func (m *Device) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Device) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Device) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *Device) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Device) GetIsTwoWay() bool {
	if m != nil {
		return m.IsTwoWay
	}
	return false
}

func (m *Device) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Device) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *Device) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Device) GetSettings() []*CommonSetting {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *Device) GetKeyID() int64 {
	if m != nil {
		return m.KeyID
	}
	return 0
}

func init() {
	proto.RegisterType((*Device)(nil), "proto.Device")
}

func init() { proto.RegisterFile("devices.proto", fileDescriptor_6d27ec3f2c0e2043) }

var fileDescriptor_6d27ec3f2c0e2043 = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0xb1, 0x6a, 0xf3, 0x30,
	0x14, 0x85, 0x7f, 0x27, 0x96, 0x7f, 0x45, 0x6e, 0x17, 0x91, 0x41, 0x64, 0x12, 0x9d, 0x3c, 0x85,
	0xd2, 0x3e, 0x42, 0xb4, 0x98, 0x76, 0x08, 0x6e, 0xa0, 0xb3, 0x23, 0x8b, 0x20, 0x9a, 0xe8, 0x1a,
	0x4b, 0xb8, 0xe8, 0xd5, 0xfa, 0x74, 0x45, 0xd7, 0x6a, 0x3b, 0x89, 0x73, 0xee, 0xf9, 0x0e, 0xe2,
	0xb0, 0xfb, 0xc1, 0xcc, 0x56, 0x1b, 0xbf, 0x1f, 0x27, 0x08, 0xc0, 0x09, 0x3e, 0xbb, 0x3b, 0x0d,
	0xb7, 0x1b, 0xb8, 0xc5, 0x7c, 0xf8, 0x5a, 0xb1, 0x4a, 0x61, 0x8c, 0x73, 0x56, 0xaa, 0xb9, 0x55,
	0xa2, 0x90, 0x45, 0xb3, 0xe9, 0xca, 0x61, 0x6e, 0x15, 0xdf, 0x32, 0xf2, 0xda, 0x9f, 0xcd, 0x55,
	0xac, 0xd0, 0x24, 0xd7, 0x24, 0x52, 0xf2, 0x14, 0x47, 0x23, 0xd6, 0xb2, 0x68, 0x48, 0x57, 0x86,
	0x38, 0x22, 0xdd, 0x6a, 0x70, 0xa2, 0x5c, 0x68, 0xab, 0xc1, 0x71, 0xc9, 0x6a, 0x65, 0xbc, 0x9e,
	0xec, 0x18, 0x2c, 0x38, 0x41, 0xf0, 0x54, 0x0f, 0x7f, 0x16, 0xdf, 0x31, 0xda, 0xfa, 0xd3, 0x27,
	0xbc, 0xf7, 0x51, 0x54, 0xb2, 0x68, 0x68, 0x47, 0x6d, 0xd6, 0xe9, 0x76, 0xe8, 0x83, 0xb9, 0xc0,
	0x14, 0xc5, 0x7f, 0x44, 0xa9, 0xce, 0x3a, 0x37, 0x07, 0xeb, 0x7a, 0x6c, 0xa6, 0xbf, 0xcd, 0x3f,
	0x56, 0xa2, 0x8f, 0x93, 0x85, 0xc9, 0x86, 0x28, 0x36, 0xf8, 0x4f, 0x3a, 0x66, 0xcd, 0x1f, 0x19,
	0x7d, 0x33, 0x21, 0x58, 0x77, 0xf1, 0x82, 0xc9, 0x75, 0x53, 0x3f, 0x6d, 0x97, 0x39, 0xf6, 0x07,
	0xdc, 0x26, 0x1f, 0x3b, 0xea, 0x73, 0x2a, 0xed, 0xf0, 0x62, 0x62, 0xab, 0xc4, 0x20, 0x8b, 0x86,
	0x77, 0xe4, 0x23, 0x89, 0xe3, 0xbf, 0x73, 0x85, 0xd8, 0xf3, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xd0, 0xc6, 0x83, 0x4c, 0x6b, 0x01, 0x00, 0x00,
}
